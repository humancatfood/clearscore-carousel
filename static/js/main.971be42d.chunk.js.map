{"version":3,"sources":["ScoreIndicator/Pagination.js","ScoreIndicator/Slider.js","ScoreIndicator/utils.js","ScoreIndicator/Arc.js","ScoreIndicator/index.js","ScoreIndicator/components/SlideText.js","ScoreIndicator/components/SlideNumber.js","ScoreIndicator/components/Spacer.js","index.js"],"names":["paginationStyle","css","position","bottom","left","width","display","justifyContent","paginationTickStyle","fontSize","height","borderRadius","margin","padding","cursor","border","boxSizing","backgroundColor","Pagination","numPages","currentPageIndex","setCurrentPageIndex","className","Array","fill","undefined","map","_","index","type","onClick","cx","active","sliderStyle","transition","slideStyle","flex","flexDirection","alignItems","opacity","content","slideStyleActive","Slider","slides","currentSlideIndex","slideTransformation","length","transform","slide","render","raf","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cb","setTimeout","arcElementStyle","top","gradientID","Math","random","toString","slice","Arc","targetValue","value","speed","useState","setValue","useEffect","start","performance","now","delta","min","useRAFTween","angle","max","rad","PI","x1","sin","y1","cos","d","viewBox","id","offset","stopColor","stroke","indicatorStyle","overflow","backdropFilter","boxShadow","ScoreIndicator","setCurrentSlideIndex","currentSlide","arcValue","baseStyle","color","styleHighlight","SlideText","highlight","props","fontWeight","SlideNumber","children","SlideSpacer","creditReportInfo","score","maxScoreValue","equifaxScoreBandDescription","currentLongTermDebt","currentLongTermCreditLimit","changeInLongTermDebt","Spacer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.971be42d.chunk.js","sourcesContent":["import React from 'react';\nimport { css, cx } from 'emotion';\n\n\n\nexport const paginationStyle = css({\n  position: 'absolute',\n  bottom: '10%',\n  left: '20%',\n  width: '60%',\n  display: 'flex',\n  justifyContent: 'center',\n});\n\nexport const paginationTickStyle = css({\n  fontSize: 'inherit',\n  width: '0.6em',\n  height: '0.6em',\n  borderRadius: '100%',\n  margin: '0 0.3em',\n  padding: 0,\n  cursor: 'pointer',\n  border: '0.2em solid white',\n  boxSizing: 'border-box',\n  backgroundColor: 'transparent',\n  '&.active': {\n    backgroundColor: 'white',\n  },\n});\n\n\nconst Pagination = ({ numPages=0, currentPageIndex, setCurrentPageIndex }) => {\n  if (numPages > 1) {\n    return (\n      <div className={paginationStyle}>\n        {\n          Array(numPages).fill(undefined).map((_, index) => (\n            <button\n              type=\"button\"\n              key={index}\n              onClick={() => setCurrentPageIndex(index)}\n              className={cx(paginationTickStyle, {active: index === currentPageIndex})}\n            ></button>\n          ))\n        }\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { css, cx } from 'emotion';\n\n\n\nconst sliderStyle = css({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  transition: 'transform 200ms ease-in-out',\n});\n\nconst slideStyle = css({\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  opacity: 0,\n  transition: 'opacity 100ms linear',\n  ':before': {\n    content: '\"\"',\n    flex: '1 1 15%',\n  },\n  ':after': {\n    content: '\"\"',\n    flex: '1 1 25%',\n  },\n});\n\nconst slideStyleActive = css({\n  opacity: 1,\n});\n\n\n\nconst Slider = ({ slides, currentSlideIndex }) => {\n\n  const slideTransformation = css({\n    width: `${slides.length * 100}%`,\n    transform: `translateX(-${100 * currentSlideIndex / slides.length}%)`,\n  });\n\n  return (\n    <div className={cx(sliderStyle, slideTransformation)}>\n      {\n        slides.map((slide, index) => (\n          <div key={index} className={cx(slideStyle, {[slideStyleActive]: index === currentSlideIndex})}>\n            {\n              slide.render()\n            }\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n\n\nexport default Slider;\n","import { useState, useEffect } from 'react';\n\n\n\nconst raf = window.requestAnimationFrame       ||\n            window.webkitRequestAnimationFrame ||\n            window.mozRequestAnimationFrame    ||\n            (cb => window.setTimeout(cb, 1000/60));\n\n\nexport const useRAFTween = (targetValue, speed=0.004) => {\n\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    if (value < targetValue) {\n      const start = performance.now();\n      raf(() => {\n        const delta = performance.now() - start;\n        setValue(Math.min(targetValue, value + delta * speed));\n      });\n    }\n  }, [value]);\n\n  return value;\n\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { useRAFTween } from './utils';\n\n\nconst arcElementStyle = css({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n});\n\nconst gradientID = Math.random().toString().slice(2);\n\n\nconst Arc = ({ value: targetValue }) => {\n\n  if (!targetValue) {\n    return null;\n  }\n\n  const value = useRAFTween(targetValue);\n\n  const angle = Math.min(Math.max(value, 0), 0.9999);\n  const rad = angle * 2 * Math.PI;\n  const x1 = 50 + Math.sin(rad) * 50;\n  const y1 = 50 - Math.cos(rad) * 50;\n  const largeArc = angle > 0.5 ? 1 : 0;\n\n  const d = `M50 0 A50 50 0 ${largeArc} 1 ${x1} ${y1}`;\n\n  return (\n    <svg className={arcElementStyle} viewBox=\"-2 -2 104 104\">\n\n      <defs>\n        <linearGradient id={gradientID}>\n          <stop offset=\"0\" stopColor=\"#a9cdd6\"/>\n          <stop offset=\"100%\" stopColor=\"#B4EDD2\"/>\n        </linearGradient>\n      </defs>\n\n      <path\n        d={d}\n        fill=\"none\"\n        stroke={`url(#${gradientID})`}\n      />\n\n    </svg>\n  );\n};\n\nexport default Arc;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nimport Pagination from './Pagination';\nimport Slider from './Slider';\nimport Arc from './Arc';\n\n\n\nconst indicatorStyle = css({\n  width: '20em',\n  height: '20em',\n  position: 'relative',\n  overflow: 'hidden',\n\n  borderRadius: '100%',\n\n  backgroundColor: 'rgba(0, 0, 0, 0.6)',\n  '@supports(backdrop-filter: blur())': {\n    backdropFilter: 'blur(10px)',\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\n  },\n  border: '1px solid rgba(255, 255, 255, 0.5)',\n  boxShadow: '1px 1px 10px rgba(0, 0, 0, 0.8)',\n\n  fontSize: 8,\n  '@media (min-width: 240px)': {\n    fontSize: 10,\n  },\n  '@media (min-width: 320px)': {\n    fontSize: 14,\n  },\n  '@media (min-width: 520px)': {\n    fontSize: 18,\n  },\n  transition: 'font-size 120ms ease-in-out',\n});\n\nconst ScoreIndicator = ({ slides=[] }) => {\n\n  const [ currentSlideIndex, setCurrentSlideIndex ] = useState(0);\n  const currentSlide = slides[currentSlideIndex];\n\n  return (\n    <div className={ indicatorStyle }>\n      <Arc value={ currentSlide.arcValue || 0 } />\n      <Slider\n        slides={ slides }\n        currentSlideIndex={ currentSlideIndex }\n      />\n      <Pagination\n        numPages={ slides.length }\n        currentPageIndex={ currentSlideIndex }\n        setCurrentPageIndex={ setCurrentSlideIndex }\n      />\n    </div>\n  );\n};\n\nScoreIndicator.propTypes = {\n  slides: PropTypes.arrayOf(PropTypes.shape({\n    render: PropTypes.func.isRequired,\n    arcValue: PropTypes.number,\n  })).isRequired,\n};\n\nexport default ScoreIndicator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from 'emotion';\n\n\n\nexport const baseStyle = css({\n  margin: 4,\n  color: 'white',\n});\n\nexport const styleHighlight = cx(baseStyle, css({\n  color: '#a9cdd6',\n}));\n\nconst SlideText = ({ highlight=false, className='', ...props }) => (\n  <p\n    className={cx(\n      {\n        [styleHighlight]: highlight,\n        [baseStyle]: !highlight,\n      },\n      className,\n    )}\n    {...props}\n  />\n);\n\nSlideText.propTypes = {\n  highlight: PropTypes.bool,\n};\n\nexport default SlideText;\n","import React from 'react';\n\nimport { css, cx } from 'emotion';\n\n\n\nexport const baseStyle = css({\n  margin: 5,\n  color: '#a9cdd6',\n  fontSize: '4em',\n  fontWeight: 'lighter',\n});\n\n\nconst SlideNumber = ({ children, className='', ...props }) => (\n  <p\n    className={cx(baseStyle, className)}\n    {...props}\n  >\n    { children }\n  </p>\n);\n\nexport default SlideNumber;\n","import React from 'react';\n\n\n\nconst SlideSpacer = props => (\n  <br {...props} />\n);\n\nexport default SlideSpacer;\n","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport ScoreIndicator from './ScoreIndicator';\nimport SlideText from './ScoreIndicator/components/SlideText';\nimport SlideNumber from './ScoreIndicator/components/SlideNumber';\nimport Spacer from './ScoreIndicator/components/Spacer';\n\nimport creditReportInfo from './creditReportInfo.json';\n\n\n\nconst {\n  creditReportInfo: {\n    score,\n    maxScoreValue,\n    equifaxScoreBandDescription,\n    currentLongTermDebt,\n    currentLongTermCreditLimit,\n    changeInLongTermDebt,\n  },\n} = creditReportInfo;\n\n\nconst slides = [\n  {\n    render: () => (\n      <>\n        <SlideText>Your credit score is</SlideText>\n        <SlideNumber>{ score }</SlideNumber>\n        <SlideText>out of <b>{ maxScoreValue }</b></SlideText>\n        <Spacer />\n        <SlideText highlight>{ equifaxScoreBandDescription }</SlideText>\n      </>\n    ),\n    arcValue: score / maxScoreValue,\n  },\n  {\n    render: () => (\n      <>\n        <SlideText>Your long term dept total</SlideText>\n        <SlideNumber>{ currentLongTermDebt }</SlideNumber>\n        <SlideText>Total credit limit { currentLongTermCreditLimit || 0 }</SlideText>\n        <Spacer />\n        <SlideText>\n          {\n            changeInLongTermDebt ? `Change from last month ${changeInLongTermDebt}` : 'No change from last month'\n          }\n        </SlideText>\n      </>\n    ),\n  },\n];\n\n\nReactDOM.render(<ScoreIndicator slides={slides} />, document.getElementById('root'));\n"],"sourceRoot":""}